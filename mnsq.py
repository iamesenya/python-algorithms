import numpy as np
import matplotlib.pyplot as plt

N = 100 # число экспериментов
sigma = 3 # стандартное отклонение наблюдаемых значений
k = 0.5 # теоретическое значение параметра k
b = 2 # теоретическое значение параметра b

f = np.array([k*z+b for z in range(N)]) # формируем теоретическую кривую
y = f + np.random.normal(0, sigma, N) # формируем экспериментальные значения y

x = np.array(range(N)) # x зададим как обычный одномерный массив

mx = x.sum()/N # суммируем все экспериментальные x и делим на их количество
my = y.sum()/N # суммируем все экспериментальные y и делим на их количество
a2 = np.dot(x.T, x)/N # вычисляем альфа 2 с помощью произведения двух векторов х транспонированная на х
a11 = np.dot(x.T, y)/N # по аналогии с альфа 2

kk = (a11 - mx*my)/(a2 - mx**2) # вычисляем оценку для k
bb = my - kk*mx # вычисляем оценку для b

ff = np.array([kk*z+bb for z in range (N)]) # строим линейный график

plt.plot(f) # теоретическая прямая
plt.plot(ff, c='red') # экспериментальная прямая
plt.scatter(x, y, s=2, c='red') # набор точек
plt.grid(True)
plt.show()